{"version":3,"file":"static/js/621.a76f68ff.chunk.js","mappings":"8LAeA,GAboBA,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAkB,CACpCE,MAAO,GACPC,OAAQ,GACRC,SAAU,WACVC,WAAY,uBACZC,IAAK,GACLC,MAAO,GACPC,OAAQ,UACR,UAAW,CACTC,UAAW,mB,UCFf,GAPkBT,EAAAA,EAAAA,IAAOU,EAAAA,EAAPV,CAAa,CAC7BW,SAAU,QACVC,aAAc,OACdR,SAAU,WACVS,QAAS,wB,SCSX,EAXc,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,SAAoC,IAA1BC,aAAAA,OAA0B,SACnD,OACE,UAAC,EAAD,WACGA,IACC,SAAC,EAAD,CAAaC,UAAU,MAAMC,IAAI,QAAQC,MAAOC,IAEjDL,IAGN,ECDD,EATa,SAAC,GAAmC,IAAjCA,EAAgC,EAAhCA,SAAUM,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,UAAC,EAAD,YACE,SAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,SAAgCF,KAChC,SAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BH,IACzBN,IAGN,C,+CCTKU,GAAaxB,EAAAA,EAAAA,IAAOyB,EAAAA,EAAPzB,CAAe,CAChC0B,QAAS,QACTC,OAAQ,SACRzB,MAAO,UAGT,K,+CCNM0B,GAAY5B,EAAAA,EAAAA,IAAO6B,EAAAA,EAAP7B,EAAkB,gBAAG8B,EAAH,EAAGA,MAAH,MAAgB,CAClD5B,MAAO,OACP,aAAc,CAAEwB,QAAS,QACzBK,aAAc,OACd,kBAAmB,CACjBC,UAAW,QAEbC,MAAO,CACLC,OAAO,aAAD,OAAeJ,EAAMK,QAAQC,UAAUC,WAC7CzB,aAAc,QATkB,IAapC,K,oOCwEA,EA7EmB,WACjB,IAAM0B,GAAWC,EAAAA,EAAAA,MACjB,GAMIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,aANNC,EADF,EACEA,QACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACAC,EAJF,EAIEA,UACaC,EALf,EAKED,UAAaC,mBAKTC,EAAQ,mCAAG,gGAASC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAhB,kBAEMC,EAAAA,EAAAA,cAAAA,MAAwB,CAACF,MAAAA,EAAOC,SAAAA,IAFtC,OAEPE,EAFO,QAGbC,EAAAA,EAAAA,IAAUD,EAAKE,KAAKC,OACpBhB,GAASiB,EAAAA,EAAAA,IAAOJ,EAAKE,KAAKG,OAJb,gDAMbC,QAAQC,MAAR,MANa,yDAAH,sDAgBd,OANAC,EAAAA,EAAAA,YAAU,WACJd,EAAUC,oBACZF,EAAM,CAAEI,MAAO,GAAIC,SAAU,IAEhC,GAAE,CAACJ,EAAWC,EAAoBF,KAGjC,kBAAMG,SAAUJ,EAAaI,GAA7B,WACE,SAAC,KAAD,CACEa,KAAK,QACLlB,QAASA,EACTmB,MAAO,CACLC,QAAS,CACPC,MAAOC,EAAAA,EACPC,QAAS,+BAGbC,OAAQ,YAA4D,IAAD,MAAxDC,MAASC,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,MAAsBM,EAAe,EAA5BxB,UAAawB,OAClD,OACE,SAAC,IAAD,CACEC,YAAY,QACZP,MAAOA,GAAS,GAChBK,SAAUA,EACVG,UAAQ,EACRC,WAAU,UAAEH,EAAOrB,aAAT,aAAE,EAAciB,SAG/B,KAEH,SAAC,KAAD,CACEL,KAAK,WACLlB,QAASA,EACTmB,MAAO,CACLY,UAAW,CACTV,MAAO,EACPE,QAAS,2BAGbC,OAAQ,YAA4D,IAAD,MAAxDC,MAASC,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,MAAsBM,EAAe,EAA5BxB,UAAawB,OAClD,OACE,SAAC,IAAD,CACEC,YAAY,WACZI,KAAK,WACLX,MAAOA,GAAS,GAChBQ,UAAQ,EACRH,SAAUA,EACVI,WAAU,UAAEH,EAAOpB,gBAAT,aAAE,EAAiBgB,SAGlC,KAEH,SAAC,IAAD,CAAYS,KAAK,SAAjB,uBAGL,ECrED,EAbe,WACb,OACE,SAACC,EAAA,EAAD,CAAOC,eAAe,SAASC,WAAW,SAA1C,UACE,UAACC,EAAA,EAAD,CAAM1D,MAAM,2BAA2BC,SAAS,gCAAhD,WACE,SAAC,EAAD,KACA,SAACC,EAAA,EAAD,CAAYyD,GAAI,CAAEC,UAAW,UAA7B,2DAMP,C,uDCdM,IAAMhB,EACX,sH","sources":["components/Popup/CloseButton.styled.js","components/Popup/PopupCard.styled.js","components/Popup/Popup.jsx","components/auth/Auth.jsx","components/auth/AuthButton.styled.js","components/auth/AuthField.styled.js","components/auth/Forms/SignInForm.jsx","pages/SignIn.jsx","shared/regex.js"],"sourcesContent":["import { CardMedia, styled } from '@mui/material';\n\nconst CloseButton = styled(CardMedia)({\n  width: 20,\n  height: 20,\n  position: 'absolute',\n  transition: 'transform .2s linear',\n  top: 20,\n  right: 20,\n  cursor: 'pointer',\n  '&:hover': {\n    transform: 'rotate(90deg)',\n  },\n});\n\nexport default CloseButton;\n","import { Card, styled } from '@mui/material';\n\nconst PopupCard = styled(Card)({\n  maxWidth: '580px',\n  borderRadius: '16px',\n  position: 'relative',\n  padding: '40px 75px 40px 75px',\n});\n\nexport default PopupCard;\n","import closeBtn from '../../images/CloseBtn.png';\nimport CloseButton from './CloseButton.styled';\nimport PopupCard from './PopupCard.styled';\n\nconst Popup = ({ children, showCloseBtn = true }) => {\n  return (\n    <PopupCard>\n      {showCloseBtn && (\n        <CloseButton component=\"svg\" alt=\"close\" image={closeBtn} />\n      )}\n      {children}\n    </PopupCard>\n  );\n};\n\nexport default Popup;\n","import { Typography } from '@mui/material';\nimport Popup from 'components/Popup/Popup';\n\nconst Auth = ({ children, title, subtitle }) => {\n  return (\n    <Popup>\n      <Typography variant=\"subtitle\">{subtitle}</Typography>\n      <Typography variant=\"h2\">{title}</Typography>\n      {children}\n    </Popup>\n  );\n};\nexport default Auth;\n","import { Button, styled } from '@mui/material';\n\nconst AuthButton = styled(Button)({\n  display: 'block',\n  margin: '40px 0',\n  width: '200px',\n});\n\nexport default AuthButton;\n","import { styled, TextField } from '@mui/material';\n\nconst AuthField = styled(TextField)(({ theme }) => ({\n  width: '100%',\n  '& fieldset': { display: 'none' },\n  marginBottom: '24px',\n  '&:first-of-type': {\n    marginTop: '40px',\n  },\n  input: {\n    border: `1px solid ${theme.palette.colorList.sanMarino}`,\n    borderRadius: '16px',\n  },\n}));\n\nexport default AuthField;\n","import React, { useEffect } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { validEmail } from 'shared/regex';\nimport AuthButton from '../AuthButton.styled';\nimport AuthField from '../AuthField.styled';\nimport { useDispatch } from 'react-redux';\nimport { signIn } from 'redux/auth/sliceAuth';\nimport api from 'api/api';\nimport { setTokens } from 'helpers/save_tokens';\n\nconst SignInForm = () => {\n  const dispatch = useDispatch();\n  const {\n    control,\n    handleSubmit,\n    reset,\n    formState,\n    formState: { isSubmitSuccessful },\n  } = useForm({\n    mode: 'onChange',\n  });\n\n  const onSubmit = async ({ email, password }) => {\n    try {\n      const resp = await api.admin_session.login({email, password});\n      setTokens(resp.data.token);\n      dispatch(signIn(resp.data.user));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (formState.isSubmitSuccessful) {\n      reset({ email: '', password: '' });\n    }\n  }, [formState, isSubmitSuccessful, reset]);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        name=\"email\"\n        control={control}\n        rules={{\n          pattern: {\n            value: validEmail,\n            message: 'please enter a valid email',\n          },\n        }}\n        render={({ field: { onChange, value }, formState: { errors } }) => {\n          return (\n            <AuthField\n              placeholder=\"email\"\n              value={value || ''}\n              onChange={onChange}\n              required\n              helperText={errors.email?.message}\n            />\n          );\n        }}\n      />\n      <Controller\n        name=\"password\"\n        control={control}\n        rules={{\n          minLength: {\n            value: 6,\n            message: 'min length is 6 charts',\n          },\n        }}\n        render={({ field: { onChange, value }, formState: { errors } }) => {\n          return (\n            <AuthField\n              placeholder=\"password\"\n              type=\"password\"\n              value={value || ''}\n              required\n              onChange={onChange}\n              helperText={errors.password?.message}\n            />\n          );\n        }}\n      />\n      <AuthButton type=\"submit\">Sing in</AuthButton>\n    </form>\n  );\n};\nexport default SignInForm;\n","import { Typography, Stack } from '@mui/material';\nimport Auth from 'components/auth/Auth';\nimport SignInForm from 'components/auth/Forms/SignInForm';\n\nconst SignIn = () => {\n  return (\n    <Stack justifyContent=\"center\" alignItems=\"center\">\n      <Auth title=\"Sign up your new account\" subtitle=\"You are welcome! ðŸ‘‹\">\n        <SignInForm />\n        <Typography sx={{ textAlign: 'center' }}>\n          Authorization is available only to admins\n        </Typography>\n      </Auth>\n    </Stack>\n  );\n};\n\nexport default SignIn;\n","/* eslint-disable no-useless-escape */\nexport const validEmail =\n  /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n"],"names":["styled","CardMedia","width","height","position","transition","top","right","cursor","transform","Card","maxWidth","borderRadius","padding","children","showCloseBtn","component","alt","image","closeBtn","title","subtitle","Typography","variant","AuthButton","Button","display","margin","AuthField","TextField","theme","marginBottom","marginTop","input","border","palette","colorList","sanMarino","dispatch","useDispatch","useForm","mode","control","handleSubmit","reset","formState","isSubmitSuccessful","onSubmit","email","password","api","resp","setTokens","data","token","signIn","user","console","error","useEffect","name","rules","pattern","value","validEmail","message","render","field","onChange","errors","placeholder","required","helperText","minLength","type","Stack","justifyContent","alignItems","Auth","sx","textAlign"],"sourceRoot":""}